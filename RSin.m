function y = RSin(x, err)  format('long')  if(err < eps("double"))    disp('Error must not be zero')  else  # Convert x from radians to degrees and minimize the value so that the sin  # function does not attempt to do calculations with large values of x.  # Convert the minimized degree value back to radians and continue the  # calculation as normal.  x = x*(180/pi);  x = mod(x, 360);  x = x * (pi/180);  y = 0.0;    for i=0:200      error = (-1)^i * ((x^(2*i + 1))) / factorial(2*i + 1);      if(abs(error) < err)        #printf("Broke at i = %d", i)        break      endif      y = y + (-1)^i * ((x^(2*i + 1))) / factorial(2*i + 1);    endfor  #printf("Approximate value for sin(x) = %f", y);  end  