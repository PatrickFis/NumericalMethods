i = 0imin = 0n = 30error = 0.0y = 0.0x = 0.5h = 1.0emin = 1.0yTaylor = 0.0eTaylor = 0.0lowestError = 0.0for i=0:n  h = 0.25*h  if(mod(i, 2) == 0)    y = y + (x^(2*i))/(factorial(2*i))  else    y = y - (x^(2*i))/(factorial(2*i))  endif  error = (2*i * (x - h)^(2*i - 1))/(factorial(i+1))  if(1 + error > 1)    lowestError = error    endif endfor yTaylor = y eTaylor = lowestError printf("Y value from Taylor Series: %f. Error from Taylor Series: %f.\n", yTaylor, lowestError)i = 0imin = 0n = 30error = 0.0y = 0.0x = 0.5h = 1.0emin = 1.0yActual = 0.0for i=1:n  h = 0.25*h  y = (sin(x + h) - sin(x))/h  error = abs(cos(x) - y)  if (error < emin)    yActual = y    emin = error    imin = i    endifendfor error = cos(x) - yActual printf("Y value derived from limit definition: %f. Error from limit is: %f", yActual, error) #printf("imin = %d, emin = %f\n", imin, emin)