function simpson_result = Simpson(f, lower, upper, error, level, level_max)  c = 0.0;  d = 0.0;  e = 0.0;  h = 0.0;    level = level + 1;  h = upper - lower;  c = (lower + upper)/2;  # Calculate Simpson's Rule once  one_simpson = h * (f(lower) + 4*f(c) + f(upper))/6;  d = (lower + c)/2;  e = (c + upper)/2;  # Calculate Simpson's Rule twice  two_simpson = h * (f(lower) + 4*f(d) + 2*f(c) + 4*f(e) + f(upper))/12;  if(level >= level_max)    simpson_result = two_simpson;    disp("Maximum level reached")  else    if(abs(two_simpson - one_simpson) < 15*error)      simpson_result = two_simpson + (two_simpson - one_simpson)/15;    else      # Recursively calculate Simpson's rule over the seperate intervals      left_simpson = Simpson(f, lower, c, error/2, level, level_max);      right_simpson = Simpson(f, c, upper, error/2, level, level_max);      simpson_result = left_simpson + right_simpson;      endif    endifendfunction